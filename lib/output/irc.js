// Generated by CoffeeScript 1.10.0
(function() {
  var channels, freenode, irc, ircOpts;

  irc = require('irc-connect');

  channels = require('irc-channels');

  ircOpts = {
    channels: [],
    port: 6667,
    secure: false,
    nick: 'foo12345B',
    realname: 'logpipe',
    ident: ''
  };

  freenode = irc.connect('irc.freenode.net', ircOpts);

  freenode.use(irc.pong, irc.names, irc.motd, channels).on('welcome', function(msg) {
    ircOpts.client = this;
    console.log("action::irc: " + msg);
  }).on('identified', function(nick) {}).on('nick', function(nick) {
    console.log('action::irc: "+Your nick is now:', nick);
  }).on('NOTICE', function(event) {
    console.log('action::irc: NOTICE:', event.params[1]);
  }).on('JOIN', function(event) {
    console.log("action::irc: ", event.nick, 'joined');
  }).on('PRIVMSG', function(event) {
    var params;
    params = event.params;
    console.log('action::irc: message from: ' + event.nick, 'to: ' + params[0], params[1]);
  }).on('names', function(cname, names) {
    console.log("action::irc: ", cname, names);
  }).on('motd', function(event) {
    console.log("action::irc: ", this.motd);
    console.log("action::irc: ", this.support);
  });

  module.exports = function(app, data) {
    var channelname, channelptr, i, len, ref, results;
    if (app.verbosity > 1) {
      console.log("action::stdout");
    }
    if (ircOpts.client == null) {
      return;
    }

    /*
     * broadcast message to channel
     */
    ref = data.channels;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      channelname = ref[i];
      console.log("logging to " + channelname);
      if (!ircOpts.channels[channelname]) {
        channelptr = {
          handler: null
        };
        channelptr.cb = function(channel) {
          channelptr.handler = channel;
          console.log("joined channel");
          return channel.on('data', function(event) {
            console.log("action:irc::channel: ");
            return console.dir(event);
          });
        };
        ircOpts.channels[channelname] = channelptr;
        results.push(ircOpts.client.join(channelname, ircOpts.channels[channelname].cb));
      } else {
        if (ircOpts.channels[channelname].handler != null) {
          results.push(ircOpts.channels[channelname].handler.msg(data.message));
        } else {
          results.push(void 0);
        }
      }
    }
    return results;
  };

}).call(this);
